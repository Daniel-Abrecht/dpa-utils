#ifndef DPA__U_SET_AND_MAP_TEMPLATE
#define DPA__U_SET_AND_MAP_TEMPLATE

#include <dpa/utils/bo.h>
#include <stdint.h>
#include <limits.h>

#define DPA__U_SM_KIND_SET 1
#define DPA__U_SM_KIND_MAP 2

// This variable is to help with benchmarks
dpa__u_api_var extern long dpa_u_total_resize_time;

#endif

#define DPA__U_SM_NO_BITSET
#define DPA__U_SM_KEY_TYPE void*
#define DPA__U_SM_KEY_TYPE_U uintptr_t
#define DPA__U_SM_NAME pointer
#include <dpa/utils/_set-and-map.common.h>

#define DPA__U_SM_MICRO_SET
#define DPA__U_SM_KEY_TYPE unsigned char
#define DPA__U_SM_NAME uc
#include <dpa/utils/_set-and-map.common.h>

#if USHRT_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE unsigned short
#define DPA__U_SM_NAME us
#include <dpa/utils/_set-and-map.common.h>

#if UINT_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE unsigned
#define DPA__U_SM_NAME u
#include <dpa/utils/_set-and-map.common.h>

#if ULONG_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE unsigned long
#define DPA__U_SM_NAME lu
#include <dpa/utils/_set-and-map.common.h>

#if ULLONG_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE unsigned long long
#define DPA__U_SM_NAME llu
#include <dpa/utils/_set-and-map.common.h>

#define DPA__U_SM_NO_BITSET
#define DPA__U_SM_KEY_TYPE size_t
#define DPA__U_SM_NAME z
#include <dpa/utils/_set-and-map.common.h>

#ifdef UINT8_MAX
#define DPA__U_SM_MICRO_SET
#define DPA__U_SM_KEY_TYPE uint8_t
#define DPA__U_SM_NAME u8
#include <dpa/utils/_set-and-map.common.h>
#endif

#ifdef UINT16_MAX
#if UINT16_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE uint16_t
#define DPA__U_SM_NAME u16
#include <dpa/utils/_set-and-map.common.h>
#endif

#ifdef UINT24_MAX
#if UINT24_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE uint24_t
#define DPA__U_SM_NAME u24
#include <dpa/utils/_set-and-map.common.h>
#endif

#ifdef UINT32_MAX
#if UINT32_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE uint32_t
#define DPA__U_SM_NAME u32
#include <dpa/utils/_set-and-map.common.h>
#endif

#ifdef UINT64_MAX
#if UINT64_MAX >= UINTPTR_MAX
#define DPA__U_SM_NO_BITSET
#endif
#define DPA__U_SM_KEY_TYPE uint64_t
#define DPA__U_SM_NAME u64
#include <dpa/utils/_set-and-map.common.h>
#endif

#ifdef DPA_HAS_UINT128
#define DPA__U_SM_NO_BITSET
#define DPA__U_SM_KEY_TYPE dpa_uint128_t
#define DPA__U_SM_NAME u128
#include <dpa/utils/_set-and-map.common.h>
#endif

#ifdef DPA_HAS_UINT256
#define DPA__U_SM_NO_BITSET
#define DPA__U_SM_KEY_TYPE dpa_uint256_t
#define DPA__U_SM_NAME u256
#include <dpa/utils/_set-and-map.common.h>
#endif

#define DPA__U_SM_BO
#define DPA__U_SM_NO_BITSET
#define DPA__U_SM_KEY_TYPE dpa_u_bo_unique_t
#define DPA__U_SM_KEY_TYPE_U dpa__u_bo_unique_reversible_hash_t
#define DPA__U_SM_NAME string
#include <dpa/utils/_set-and-map.common.h>

#undef DPA__U_SM_TEMPLATE
#undef DPA__U_SM_KIND
