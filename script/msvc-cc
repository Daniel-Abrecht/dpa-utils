#!/bin/bash

set -e

# You can export these variables in your shell to override them
if [ -z "$winkitdir" ]; then winkitdir="/mnt/c/Program Files (x86)/Windows Kits/10"; fi
if [ -z "$winkitincdir" ]; then winkitincdir="$(printf '%s\n' "${winkitdir}/Include/"*/ | tail -n 1)"; fi
if [ -z "$winkitlibdir" ]; then winkitlibdir="$(printf '%s\n' "${winkitdir}/Lib/"*/ | tail -n 1)"; fi
if [ -z "$msvcdir" ]; then msvcdir="$(printf '%s\n' "/mnt/c/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/"*/ | tail -n 1)"; fi
export PATH="$PATH:${msvcdir}bin/Hostx64/x64"

args=(
  "cl.exe"
  "/I" "C:${msvcdir:6}include/"
  "/I" "C:${winkitincdir:6}ucrt/"
  "/I" "C:${winkitincdir:6}um/"
  "/I" "C:${winkitincdir:6}shared/"
  "/utf-8"
#  "/Zc:inline" # This option is broken. The exports in the src/gen/*.c files are ignored
  "/wd4114"
  "/wd4116"
)
largs=(
  "/MACHINE:X64"
  "/LIBPATH:C:${msvcdir:6}lib/x64/"
  "/LIBPATH:C:${winkitlibdir:6}ucrt/x64/"
  "/LIBPATH:C:${winkitlibdir:6}um/x64/"
  "Advapi32.Lib"
)
libdir=()

add-lib(){
  if [ "$1" = "m" ]
    then return 0
  fi
  if [ -f "$1" ]; then res="$1"; fi
  for d in "${libdir[@]}"
  do
    if [ -n "$res" ]; then break; fi
    if [ -f "${d}lib$1.lib" ]
    then
      res="${d}lib$1.lib"
    elif [ -f "${d}lib$1.a.lib" ]
    then
      res="${d}lib$1.a.lib"
    elif [ -f "${d}lib$1.a" ]
    then
      res="${d}lib$1.a"
    fi
  done
  if [ -z "$res" ]
  then
    echo "library not found: $1" >&2
    exit 1
  fi
  if [ -n "$wholearchive" ] && [ -n "$shared" ]
    then largs+=("/WHOLEARCHIVE:$res")
  fi
  args+=("$res")
}

type=exe
outfile=
wholearchive=
shared=

while [ $# -gt 0 ]
do
  arg="$1"; shift
  case "$arg" in
      -c) args+=("/c"); type=obj ;;
      -S) args+=("/c" "/Fo:/dev/null"); type=asm ;;
 --std=*) args+=("/std:${arg:6}") ;;
      -I) args+=("/I" "$1"); shift ;;
     -I*) args+=("/I" "${arg:2}") ;;
      -L) libdir+=("$1"); shift ;;
     -L*) libdir+=("${arg:2}") ;;
     -D*) args+=("-D" "${arg:2}") ;;
      -l) add-lib "$1"; shift ;;
     -l*) add-lib "${arg:2}" ;;
      -o) outfile="$1"; shift ;;
     -o*) outfile="${arg:2}" ;;
--shared) args+=("/LD"); shared=1; ;;
      -x) case "$1"  in c) args+=("/TC");; c++) args+=("/TP");; esac; shift ;;
     -g*) args+=("/Zi") ;;
     -O1) args+=("/O1") ;;
     -O2) args+=("/O2") ;;
     -Wl,--whole-archive) wholearchive=1 ;;
     -Wl,--no-whole-archive) wholearchive= ;;
      -*) ;;
   *.lib) add-lib "$arg" ;;
       *) args+=("$arg") ;;
  esac
done

if [ -n "$outfile" ]
then
  case "$type" in
    obj) args+=("/Fo:$outfile") ;;
    asm) args+=("/Fa$outfile") ;;
    exe)
      args+=("/Fe:$outfile")
      args+=("/link" "${largs[@]}")
    ;;
  esac
fi

quote(){
  local quoted=${1//\'/\'\\\'\'};
  printf "'%s'" "$quoted"
}

print_cmd(){
  qargs=()
  for x in "$@"
  do
    qargs+=("$(quote "$x")")
  done
  echo "${qargs[@]}" >&2
}

print_cmd "${args[@]}"
"${args[@]}"
